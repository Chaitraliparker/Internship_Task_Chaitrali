Internship Task 4


Create Database HR_department

CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    email VARCHAR(50) NOT NULL,
    phone INT NOT NULL,
    hire_date DATE,
    salary DECIMAL(10,2),
    manager_id INT,
    FOREIGN KEY (manager_id) REFERENCES employee(employee_id) 
);

INSERT INTO employee (employee_id, first_name, last_name, email, phone, hire_date, salary, manager_id) VALUES
(101, 'Ravi', 'Sharma', 'ravi.sharma@example.com', 9876543210, '2020-01-10', 80000, NULL),  
(102, 'Anil', 'Yadav', 'anil.yadav@example.com', 9876543211, '2021-03-15', 75000, 101),  
(103, 'Suman', 'Verma', 'suman.verma@example.com', 9876543212, '2022-05-20', 70000, 101), 
(104, 'Neha', 'Sharma', 'neha.sharma@example.com', 9876543213, '2020-06-25', 72000, 102), 
(105, 'Vikas', 'Singh', 'vikas.singh@example.com', 9876543214, '2019-08-14', 68000, 102), 
(106, 'Priya', 'Kumar', 'priya.kumar@example.com', 9876543215, '2021-02-18', 80000, 103), 
(107, 'Rakesh', 'Sharma', 'rakesh.sharma@example.com', 9876543216, '2021-04-10', 75000, 104),  
(108, 'Kiran', 'Yadav', 'kiran.yadav@example.com', 9876543217, '2020-11-05', 70000, 101),
(109, 'Geeta', 'Verma', 'geeta.verma@example.com', 9876543218, '2023-03-13', 75000, 104),
(110, 'Manoj', 'Singh', 'manoj.singh@example.com', 9876543219, '2019-07-12', 72000, 106);


ALTER TABLE employee
ADD COLUMN department_id INT,
ADD CONSTRAINT fk_department FOREIGN KEY (department_id) REFERENCES departments(department_id);


Departments Table:
CREATE TABLE departments (
    department_id INT PRIMARY KEY,
    department_name VARCHAR(100) NOT NULL,
    manager_id INT,
    FOREIGN KEY (manager_id) REFERENCES employee(employee_id)
);

INSERT INTO departments (department_id, department_name, manager_id) VALUES
(1, 'Human Resources', 101),
(2, 'Finance', 102),
(3, 'IT', 103),
(4, 'Marketing', 104),
(5, 'Sales', 105),
(6, 'Operations', 106),
(7, 'Customer Service', 107),
(8, 'Legal', 108),
(9, 'Research & Development', 109),
(10, 'Procurement', 110);



PerformanceReviews Table:
CREATE TABLE performerreviews (
    review_id INT PRIMARY KEY,
    employee_id INT,
    review_date DATE,
    performance_score VARCHAR(50),
    comments VARCHAR(500),
    FOREIGN KEY (employee_id) REFERENCES employee(employee_id)
);
INSERT INTO performerreviews (review_id, employee_id, review_date, performance_score, comments) VALUES
(1, 101, '2022-12-25', 'Excellent', 'Excellent performance throughout the year.'),
(2, 102, '2022-11-30', 'Good', 'Good performance with room for improvement.'),
(3, 103, '2022-06-15', 'Average', 'Needs to improve communication skills.'),
(4, 104, '2022-09-30', 'Excellent', 'Great leadership skills and team management.'),
(5, 105, '2022-10-20', 'Poor', 'Performance is below expectations, needs to improve.'),
(6, 106, '2022-08-10', 'Good', 'Solid performance but could improve in problem-solving.'),
(7, 107, '2022-07-25', 'Average', 'Meets expectations but needs to work on deadlines.'),
(8, 108, '2022-04-15', 'Very Good', 'Great attitude and team player.'),
(9, 109, '2022-05-10', 'Excellent', 'Outstanding performance, excellent results.'),
(10, 110, '2022-01-30', 'Poor', 'Needs to focus on improving time management.');



Payroll Table:
CREATE TABLE payroll (
    payroll_id INT PRIMARY KEY,
    employee_id INT,
    amount INT,
    payment_date DATE,
    payment_method VARCHAR(50),
    FOREIGN KEY (employee_id) REFERENCES employee(employee_id)
);

INSERT INTO payroll (payroll_id, employee_id, amount, payment_date, payment_method) VALUES
(1, 101, 80000, '2025-01-31', 'Bank Transfer'),
(2, 102, 75000, '2025-01-31', 'Cash'),
(3, 103, 70000, '2025-01-31', 'Cheque'),
(4, 104, 72000, '2025-01-31', 'Bank Transfer'),
(5, 105, 68000, '2025-01-31', 'Cash'),
(6, 106, 80000, '2025-01-31', 'Cheque'),
(7, 107, 75000, '2025-01-31', 'Bank Transfer'),
(8, 108, 70000, '2025-01-31', 'Cash'),
(9, 109, 75000, '2025-01-31', 'Cheque'),
(10, 110, 72000, '2025-01-31', 'Bank Transfer');


1 Retrieve the names and contact details of employee hired after January 1, 2023
SELECT first_name, last_name,email, phone,hire_date
FROM employee
WHERE hire_date > '2023-01-01';

2. Find the total payroll amount paid to each department

3. List all employees who have not been assigned a manager.
SELECT employee_id, first_name, last_name, email, phone, hire_date
FROM employee
WHERE manager_id IS NULL;

4. Retrieve the highest salary in each department along with the employees name.
SELECT  e.first_name,  e.last_name, e.salary,  d.department_name
FROM  employee e
JOIN  departments d ON e.department_id = d.department_id
WHERE e.salary = (
        SELECT MAX(salary)
        FROM employee
        WHERE department_id = e.department_id );


6. Count the number of employees in each department.
SELECT d.department_name, COUNT(e.employee_id) AS employeecount
FROM departments d
LEFT JOIN employee e ON d.department_id = e.department_id
GROUP BY d.department_name;

7. List all employees who have received a performance score of "Excellent". Identify the most frequently used payment method in payroll.
SELECT  e.employee_id, e.first_name, e.last_name, pr.performance_score
FROM employee e
JOIN  PerformerReviews pr ON e.employee_id = pr.employee_id
WHERE pr.performance_score ='Excellent';


8. Retrieve the top 5 highest-paid employees along with their departments.
SELECT  e.first_name, e.last_name, e.salary, d.department_name
FROM employee e
JOIN departments d ON e.department_id = d.department_id
ORDER BY e.salary DESC
LIMIT 5;

9. Show details of all employees who  report directly to a specific manager(ManagerID = 101)
SELECT  employee_id,  first_name,  last_name, email, phone, hire_date, salary,  department_id, manager_id
FROM  employee
WHERE manager_id = 101;











